aggregation.failed=Failed to execute the aggregation pipeline:  {0}
cannot.find.type.in.document=No type information found in the document.
cannot.instantiate=The type ''{0}'' can not be instantiated: {1}
cannot.persist.null.entity=Can not persist a null entity.
collection.not.mapped=The collection ''{0}'' is not mapped to a java class.
concurrent.modification=Entity of type {0} (id={1}) was not persisted. Either it was modified by another process or was improperly \
  initialized.  See the versioning documentation for more details.
contradicting.annotations=A property can be either annotated with @{0} OR @{1}, but not both.
conversion.not.supported=No conversion exists yet for this type:  {0}
document.stream.exceeded=No more elements remaining
duplicated.mapped.name=Duplicated mapped name found on {0}: {1}
duplicated.parameter.name=Duplicated parameter name found on {0}: {1}
encoding.only=This codec is for encoding only.
entityOrEmbedded={0} must be annotated with either @Entity or @Embedded.
field.cannot.be.null=Field name can not be null.
filter.mapping.not.supported=Conversion of {0} is not currently supported.
id.required=An @Id property is required on top level entities.  {0} does not have an @Id property.
illegal.argument=Illegal argument of type {0} given where a type of {1} was expected.
instantiation.problem=Can''t instantiate the type {0}: {1}
invalid.bson.operation=Value expected to be of type {0} is of unexpected type {1}
invalid.annotation.combination={0} is annotated with @{1} and cannot be mixed with other annotations (like @Reference)
invalid.index.path=The path ''{0}'' can not be validated against ''{1}'' and may represent an invalid index
invalid.path.target=Could not resolve path ''{0}'' against ''{1}''.
key.not.allowed.as.property=Keys are not allowed as properties.  Use (lazy) references instead.
legacy.operation=This is a legacy operation and is not supported on this version of the API.
logged.query=logged query: {0}
misnamed.constructor.parameter=Named constructor parameter ''{1}'' does not match mapped property on {0}.
missing.referenced.entities=Referenced ''{0}'' entities could not be found during a fetch.
missing.referenced.entity=Referenced ''{0}'' entity could not be found during a fetch.
mixed.group.id.definition=A group ID can either reference a field (e.g., "$name") or have a list of expressions but not both.
mixed.mode.projections=Only one form of projection allowed at a time.
mixed.projections=Projections can not mix included and excluded fields together.
mixed.modes.not.allowed={0} can either take a single value or a document but not both.
mixed.update.operations.not.allowed=Individual fields can not be updated when $setting the document itself.
multiple.id.properties.found="More than one @Id property found ({0})."
noarg.constructor.not.found={0} does not have a 0 argument constructor.
no.id.property.found=No field is annotated with @Id on {0} but it is required
no.id.for.reference=No ID found for referenced entity.  Ensure referenced entities are saved first.
no.inner.classes=Inner classes can not be used.  Please make this type static:  {0}
no.mapped.collection=No collection has been mapped for {0}.  Types must be annotated with @Entity to be mapped to a collection.
no.suitable.constructor=No suitable constructor found for type: ''{0}''
not.available.in.legacy=This operation is not available to the legacy query implementation. Set the query factory to DefaultQueryFactor \
  or don't use legacy() when building your MapperOptions.
not.mappable={0} is not a mappable type. Mappable types need to be annotated with either @Entity or @Embedded.
not.null={0} can not be null.
null.update.entity=The value passed in for $set can not be null.
only.number.types.allowed=Currently only the following types are allowed: integer, long, double, float.
persistence.not.intended=This type is not intended for persistence and is unsupported in this context.
query.not.logged=No query structure was logged for this query.
referred.type.missing.id={0} is annotated with @Reference but the class {1} is missing the @Id annotation
translation.not.currently.supported=This mapping is not currently supported.
unmapped.query.type=Queries can not be against against unknown types:  {0}
unnamed.constructor.parameter=Unnamed constructor parameter found on ''{0}''.  Annotate parameters with @Name.
update.sort.options={0} can not be set if {1} already is
value.cannot.be.null=Value can not be null.
values.cannot.be.null.or.empty=Values can not be null or empty.
version.manually.set=When versioning entities, the version properties must not be manually given values.
versioned.update.on.nonversioned.entity=A versioned updated was attempted on a nonversioned entity.
@warn.found.unannotated.class=Unannotated class found:  {0}.  Unannotated classes are not allowed when scanning packages.  If you want \
  this class mapped, please call map() and explicitly pass this class reference in.
@warn.more.than.one.mapper=Found more than one class mapped to collection ''{0}'': {1}
@warn.test.feature.only=This feature is intended for testing and debugging only.
@warn.no.mapped.classes=No classes have been mapped.
@warn.ignoring.transient.property={0} is marked as transient and will not be persisted.
@warn.unset.names.dollar.sign=Field names in a $unset can not start with ''$''.  Automatically stripping the ''$'' from the names.
@debug.calling.lifecycle.method=Calling lifecycle method(@{0} {1}) on {2}
@debug.calling.interceptor.method=Calling interceptor method {0} on {1}
### Document Reader
cannot.read.name=name() can''t called when iterating List values
invalid.reader.state={0} can only be called when State is {1}, not when State is {2}."
not.array.end=Call to end array made before the end of the array
not.document.type=Value is not a document type
not.document.end=Call to end document made before the end of the document
unbalanced.opens=Starts and ends are currently unbalanced: arrays open:  {0},  documents open:  {1}.  current state:  {2}
### Document Writer
already.at.root=No previous state found.  Already at the root.
not.in.valid.state=Was not expecting a {0} while in the {1} state.
